{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "description": "Problem configuration. Consisting of parameters for domain, flow, media, solvers, time-stepping, and output.",
    "properties": {
      "domain": {
        "type": "object",
        "properties": {
          "dim": { "type": "integer" },
          "grid": { "type": "string" },
          "numRefs": { "type": "integer" },
          "numPreRefs": { "type": "integer" }
        },
        "required": ["dim", "grid", "numRefs", "numPreRefs"]
      },
      "parameter": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uid": { "type": "string" },
            "type": {
              "type": "string",
              "enum": ["const", "vanGenuchten", "exp"]
            },

            "thetaS": { "type": "number" },
            "thetaR": { "type": "number" },
            "alpha": { "type": "number" },
            "n": { "type": "number" },
            "pentry": { "type": "number" },
            "beta": { "type": "number" },
            "value": { "type": "number" }
          },
          "required": ["uid", "type"],
          "allOf": [
          {
            "if": {
              "properties": {
                "type": { "const": "vanGenuchten" }
              }
            },
            "then": {
              "required": ["thetaS", "thetaR", "alpha", "n"]
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "exp" }
              }
            },
            "then": {
              "required": ["pentry", "alpha", "beta", "thetaR", "thetaS"]
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "const" }
              }
            },
            "then": {
              "required": ["value"]
            }
          }
          ]
        }
      },
      "flow": {
        "type": "object",
        "properties": {
          "boussinesq": {
            "type": "boolean"
          },
          "gravity": {
            "type": "number",
            "description": "[m s^{-2}], must be negative!"
          },
          "density": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["linear", "exp", "ideal"],
                "description": "density function"
              },
              "min": {
                "type": "number",
                "description": "[kg m^{-3}] water density"
              },
              "max": {
                "type": "number",
                "description": "[kg m^{-3}] saltwater density"
              }
            },
            "required": ["type", "min", "max"]
          },
          "viscosity": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["const", "real"],
                "description": "viscosity function"
              },
              "mu0": {
                "type": "number",
                "description": "[Pa s]"
              }
            },
            "required": ["type", "mu0"]
          },
          "diffusion": {
            "type": "number",
            "description": "[m^2/s]"
          },
          "upwind": {
            "type": "string",
            "enum": ["partial", "full"]
          }
        },
        "required": ["gravity", "density", "diffusion"]
      },
      "medium": {
        "description" : "Characterization of the media",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "subsets": { "type": "array", "items": { "type": "string" } },
            "porosity": {
              "description" : "Relative saturation (number, string or object)",
              "oneOf": [
                {  "type": "number" },
                {
                  "type": "string",
                  "description": "UID providing a reference to parameter object."
                }
              ]
            },
          "saturation": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            },
            "required": ["value"]
          },
            "conductivity": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              },
            "required": ["value"]
            },
            "permeability": {
              "description" : "Absolute permeability (number or matrix)",
              "type": "number"
            },
            "alphaL": {
               "description" : "(Optional) Scheidegger dispersion (longitudinal)",
               "type": "number" },
            "alphaT": {
                "description" : "(Optional) Scheidegger dispersion (transversal)",
                "type": "number" }
          },
          "required": ["subsets", "porosity", "saturation", "conductivity"]
        }
      },
      "sources": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "cmp": { "type": "string", "enum": ["p", "c"] },
            "subset": { "type": "string" },
            "coord": { "type": "array", "items": { "type": "number" }, "minItems": 2, "maxItems": 3 },
            "strength": {
              "value": {
                "oneOf": [
                    { "type": "string" },
                    { "type": "number" }
                  ]
                }
              },
            "substances": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cmp": { "type": "string" }
                },
                "required": ["cmp"]
              }
            }
          },
          "required": ["cmp", "subset", "coord", "strength", "substances"]
        }
      },
      "initial": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "cmp": { "type": "string" },
            "value": {
              "oneOf": [
                  { "type": "string" },
                  { "type": "number" }
                ]
              }
          },
          "required": ["cmp", "value"]
        }
      },
      "boundary": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "cmp": { "type": "string" },
            "type": {
              "type": "string",
              "enum": ["dirichlet", "flux", "neumann"],
              "description": "Type of boundary condition."
            },
            "bnd": { "type": "string" },
            "value": {
              "oneOf": [
                  { "type": "string" },
                  { "type": "number" }
                ]
              }
            },
          "required": ["cmp", "type", "bnd", "value"]
        }
      },
      "time": {
        "type": "object",
        "properties": {
          "control": { "type": "string" },
          "start": { "type": "number" },
          "stop": { "type": "number" },
          "max_time_steps": { "type": "integer" },
          "dt": { "type": "number" },
          "dtmin": { "type": "number" },
          "dtmax": { "type": "number" },
          "dtred": { "type": "number" },
          "tol": { "type": "number" }
        },
        "required": ["control", "start", "stop", "max_time_steps", "dt", "dtmin", "dtmax", "dtred", "tol"]
      },
      "output": {
        "type": "object",
        "properties": {
          "file": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["all", "p", "gradp", "c", "gradc", "rho", "mu", "kr", "s", "q", "ff", "tf", "af", "df", "pc", "vf"]
            }
          },
          "fs_evaluation_points": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": "number" }
            }
          },
          "plot_step": { "type": "number" }
        },
        "required": ["file", "data"]
      }
    },
    "required": ["domain", "parameter", "flow", "medium", "initial", "time", "output"]
  }
